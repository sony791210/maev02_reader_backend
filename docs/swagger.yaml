basePath: /
definitions:
  account.Account:
    properties:
      id:
        type: string
    type: object
  account.HTTPError:
    type: object
  comic.Comic:
    properties:
      id:
        type: string
    type: object
  novel.Novel:
    properties:
      id:
        type: string
    type: object
host: localhost:2000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /api/v1/ListNovelTitle/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: novel name id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/novel.Novel'
      summary: Show a ListNovelTitle
      tags:
      - Novel
  /api/v1/NovelContext/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: novel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/novel.Novel'
      summary: Show a NovelContext
      tags:
      - Novel
  /api/v1/accounts/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      operationId: get-string-by-int
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/account.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/account.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/account.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/account.HTTPError'
      summary: Show a account
  /api/v1/book/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: novel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/novel.Novel'
      summary: æ›¸
      tags:
      - Novel
  /api/v1/book/search:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: title name
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/novel.Novel'
      summary: Show a NovelContext
      tags:
      - Novel
  /api/v1/comic/list/{comicname}/{page}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: comicname
        in: path
        name: comicname
        required: true
        type: string
      - description: page
        in: path
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/comic.Comic'
      summary: Show a comic page list
      tags:
      - Comic
  /api/v1/listNovel:
    get:
      consumes:
      - application/json
      description: get string by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/novel.Novel'
      summary: Show a listNovel
      tags:
      - Novel
swagger: "2.0"
